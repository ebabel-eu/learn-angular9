{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/success-alert/success-alert.component.ts","webpack:///src/app/success-alert/success-alert.component.html","webpack:///src/app/username/username.component.ts","webpack:///src/app/username/username.component.html","webpack:///src/app/warning-alert/warning-alert.component.ts","webpack:///src/app/warning-alert/warning-alert.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","SuccessAlertComponent","UsernameComponent","usernameValue","resetUsernameValue","WarningAlertComponent","environment","production","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,SAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,a;AAAA,0E;AAAA;AAAA;ACPzB;;AACE;;AACE;;AACE;;AAAI;;AAAwB;;AAC9B;;AACF;;AACA;;AACE;;AACE;;AAAmB;;AAA2B;;AAChD;;AACA;;AACE;;AAAmB;;AAAuC;;AAC5D;;AACF;;AAEA;;AACE;;AACE;;AACF;;AACF;;AACF;;;;;;;;;sEDbaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAuBaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAJJ,CACP,uEADO,EAEP,0DAFO,CAII;;;;0HAGFA,S,EAAS;AAAA,uBAZlB,2DAYkB,EAXlB,4FAWkB,EAVlB,4FAUkB,EATlB,8EASkB;AATD,kBAGjB,uEAHiB,EAIjB,0DAJiB;AASC,O;AALP,K;;;;;sEAKFA,S,EAAS;cAdrB,sDAcqB;eAdZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,4FAFY,EAGZ,4FAHY,EAIZ,8EAJY,CADN;AAORC,iBAAO,EAAE,CACP,uEADO,EAEP,0DAFO,CAPD;AAWRC,mBAAS,EAAE,EAXH;AAYRC,mBAAS,EAAE,CAAC,2DAAD;AAZH,S;AAcY,Q;;;;;;;;;;;;;;;;;;ACvBtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;QAOaC,qB;AAEX,uCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,qB;AAAqB,K;;;YAArBA,qB;AAAqB,wC;AAAA,6B;AAAA,c;AAAA,a;AAAA,8D;AAAA;AAAA;;;ACPlC;;AACE;;AACF;;;;;;;;sEDKaA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTR,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;AEPlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACMA;;AAA0B;;AAAoB;;;;;;AAE9C;;AACE;;AAAG;;AAAwB;;AAC3B;;AAAG;;AAA4E;;AACjF;;;;;;AAFK;;AAAA;;AACA;;AAAA;;;;QDHQO,iB;AAGX,mCAAc;AAAA;AAAG;;;;mCAET,CACP;;;6CAEiB;AAChB,eAAKC,aAAL,GAAqB,EAArB;AACD;;;;;;;uBAVUD,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,iS;AAAA;AAAA;ACN9B;;AACE;;AAAO;;AAAQ;;AACf;;AAAmB;AAAA;AAAA;;AAAnB;;AACF;;AAEA;;AAEA;;AAKA;;AACE;;AACE;;AACF;;AAEA;;AAAsB;AAAA,mBAAS,IAAAE,kBAAA,EAAT;AAA6B,WAA7B;;AACpB;;AACF;;AACF;;;;AAlBqB;;AAAA;;AAGlB;;AAAA;;AAEE;;AAAA;;AAMqD;;AAAA;;AACtD;;AAAA;;AAGuF;;AAAA;;;;;;;;;sEDX9EF,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTT,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;QAOaU,qB;AAEX,uCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,qB;AAAqB,K;;;YAArBA,qB;AAAqB,wC;AAAA,6B;AAAA,c;AAAA,a;AAAA,8D;AAAA;AAAA;;;ACPlC;;AACE;;AACF;;;;;;;;sEDKaA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTZ,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;AEPlC;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMW,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular';\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-lg\">\n      <h1>To Angular 9 and beyond!</h1>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm\">\n      <app-warning-alert>Houston, we have a problem.</app-warning-alert>\n    </div>\n    <div class=\"col-sm\">\n      <app-success-alert>We have landed - planet A9 looks solid.</app-success-alert>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-sm\">\n      <app-username></app-username>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { WarningAlertComponent } from './warning-alert/warning-alert.component';\nimport { SuccessAlertComponent } from './success-alert/success-alert.component';\nimport { UsernameComponent } from './username/username.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WarningAlertComponent,\n    SuccessAlertComponent,\n    UsernameComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-success-alert',\n  templateUrl: './success-alert.component.html',\n  styleUrls: ['./success-alert.component.css']\n})\nexport class SuccessAlertComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"alert alert-success\" role=\"alert\">\n  <ng-content></ng-content>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-username',\n  templateUrl: './username.component.html',\n  styleUrls: ['./username.component.css']\n})\nexport class UsernameComponent implements OnInit {\n  usernameValue: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  resetUsernameValue(): void {\n    this.usernameValue = '';\n  }\n}\n","\n<div class=\"form-group\">\n  <label>Username</label>\n  <input type=\"text\" [(ngModel)]=\"usernameValue\" class=\"form-control\">\n</div>\n\n<p *ngIf=\"!usernameValue\">Remind me your name?</p>\n\n<div *ngIf=\"usernameValue\">\n  <p>Hello {{usernameValue}}!</p>\n  <p>How are you today? Ready to explore the universe with me, {{usernameValue}}?</p>\n</div>\n\n<div class=\"btn-group\">\n  <button type=\"button\" class=\"btn btn-large btn-primary\" [disabled]=\"!usernameValue\">\n    {{usernameValue ? 'Ready to take off!' : 'Not quite ready yet'}}\n  </button>\n\n  <button type=\"button\" (click)=\"resetUsernameValue()\" class=\"btn btn-large btn-secondary\" [disabled]=\"!usernameValue\">\n    Reset\n  </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-warning-alert',\n  templateUrl: './warning-alert.component.html',\n  styleUrls: ['./warning-alert.component.css']\n})\nexport class WarningAlertComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"alert alert-warning\" role=\"alert\">\n  <ng-content></ng-content>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}